# -*- coding: utf-8 -*-
"""accident_task4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JGpttRQxuHYAIze2HyKN__ajcn1d8H8m
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from folium import Map, Marker
from folium.plugins import HeatMap
df = pd.read_csv('/content/accidents_2009_to_2011.csv')
df.head()

df.info()

df.isnull().sum()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Convert 'Time' column to datetime objects
df['Time'] = pd.to_datetime(df['Time'], errors='coerce', format='%H:%M')

# Extract hour from the Time column
df['Hour'] = df['Time'].dt.hour

# Convert 'Date' column to datetime objects and extract day of the week
df['Day_of_Week'] = pd.to_datetime(df['Date'], errors='coerce').dt.dayofweek

# Create a pivot table for the heatmap
heatmap_data = df.pivot_table(index='Day_of_Week', columns='Hour', values='Accident_Index', aggfunc='count')

# Fill NaN values with 0 for visualization
heatmap_data = heatmap_data.fillna(0)

# Create the heatmap
plt.figure(figsize=(12, 6))
sns.heatmap(heatmap_data, cmap='viridis', annot=True, fmt="d", linewidths=.5)
plt.title('Accident Heatmap by Day of Week and Hour')
plt.xlabel('Hour of the Day')
plt.ylabel('Day of the Week')
plt.yticks(ticks=range(7), labels=['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'], rotation=0)
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt

# Group data
weather_road_conditions = df.groupby(['Weather_Conditions', 'Road_Surface_Conditions']).size().reset_index(name='Count')

# Plot
plt.figure(figsize=(12, 6))
sns.barplot(data=weather_road_conditions, x='Weather_Conditions', y='Count', hue='Road_Surface_Conditions')
plt.xticks(rotation=45)
plt.title('Accidents by Weather and Road Surface Conditions')
plt.show()

sns.violinplot(data=df, x='Day_of_Week', y='Number_of_Vehicles')
sns.violinplot(data=df, x='Day_of_Week', y='Number_of_Casualties')
plt.title('Distribution of Number of Vehicles and Casualties by Day of the Week')
plt.show()







